{"version":3,"file":"naive.js","sources":["../../src/utils.js","../../src/dom.js","../../src/vdom/vtext.js","../../src/directives/class.js","../../src/directives/show.js","../../src/directives/style.js","../../src/directive.js","../../src/event.js","../../src/vdom/vnode.js","../../src/vdom/utils.js","../../src/vdom/list-diff.js","../../src/vdom/dom-index.js","../../src/vdom/patch.js","../../src/vdom/diff.js","../../src/vdom/h.js","../../src/api/hooks.js","../../src/exception.js","../../src/main.js"],"sourcesContent":["export function warn (message) {\n  if (window.console) {\n    console.warn(`[naive.js] ${message}`);\n  }\n}\n\nexport function error (message) {\n  if (window.console) {\n    console.error(`[naive.js] ${message}`);\n  }\n}\n\nexport const isArray = Array.isArray ? Array.isArray : function isArray (obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n};\n\nexport function isUndefined (obj) {\n  return typeof obj === 'undefined';\n}\n\nexport function noop () {}\n\nexport function extend(obj, props) {\n  if (props) {\n    for (let i in props) obj[i] = props[i];\n  }\n  return obj;\n}\n\nexport function clone(obj) {\n  return extend({}, obj);\n}\n\nexport function isFunction (obj) {\n  return typeof obj === 'function';\n}\n\nexport function isPlainObject (obj) {\n  return obj != null && typeof obj === 'object' && !isArray(obj) && Object.prototype.toString.call(obj) === '[object Object]';\n}\n\nlet resolved = typeof Promise!=='undefined' && Promise.resolve();\nexport const defer = resolved ? (f => { resolved.then(f); }) : setTimeout; // asap async\n","import { isUndefined } from './utils';\n\n/**\n * 获取元素\n *\n * IE 8 只支持到 CSS2 选择器\n *\n * @param {String} selector\n */\nexport function getElement(selector) {\n  return typeof selector === 'string' ? query(selector) : selector;\n}\n\nexport function createElement(tag) {\n  return document.createElement(tag);\n}\n\nexport function createTextNode (text) {\n  return document.createTextNode(text);\n}\n\nexport function createDocumentFragment () {\n  return document.createDocumentFragment();\n}\n\nexport function query(selector, context) {\n  context = context || document;\n  return context.querySelector(selector);\n}\n\n/**\n * 检查一个元素是否在 document 内\n */\nexport function inDoc(node) {\n  var doc = node.ownerDocument.documentElement;\n  return doc === node || node && node.nodeType === 1 && doc.contains(node);\n}\n\nexport function removeNode(node) {\n  const parentNode = node.parentNode;\n  if (parentNode) {\n    parentNode.removeChild(node);\n  }\n}\n\nexport function createAnchor(name) {\n  var n = document.createTextNode('');\n  n.name = name;\n  return n;\n}\n\nexport function before(newNode, node) {\n  node.parentNode.insertBefore(newNode, node);\n}\n\nexport function replaceNode(newNode, node) {\n  node.parentNode.replaceChild(newNode, node);\n}\n\nexport function after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling)\n  } else {\n    target.parentNode.appendChild(el)\n  }\n}\n\nexport function appendChild (el, target) {\n  target.appendChild(el);\n}\n\nexport function setAttr (node, attr, value) {\n  node.setAttribute(attr, value);\n}\n\nexport function hasAttr(node, name) {\n  return node.hasAttribute(name);\n}\n\nexport function removeAttr(node, name) {\n  node.removeAttribute(name);\n}\n\nexport function removeAllChildren(node) {\n  while(node.childNodes.length > 0) {\n    node.removeChild(node.childNodes[0]);\n  }\n}\n\n\nconst classSplitReg = /\\s+/;\n\nconst supportClassList = !isUndefined(document.createElement('div').classList);\n\nlet getClasses = supportClassList ?\n  function(element) {\n    return Array.prototype.slice.call(element.classList);\n  }\n  :\n  function(element) {\n    return element.className.split(/\\s+/).filter(s => s);\n  };\n\nexport let hasClass = supportClassList ?\n  function(element, classes) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    var contains = true;\n    for (let i = 0; i < classes.length; ++i) {\n      if (!element.classList.contains(classes[i])) {\n        contains = false;\n        break;\n      }\n    }\n    return contains;\n  }\n  :\n  function(element, classes) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    var contains = true, tmp = element.className;\n    for (let i = 0; i < classes.length; ++i) {\n      if (tmp.indexOf(classes[i]) === -1) {\n        contains = false;\n        break;\n      }\n    }\n    return contains;\n  };\n\nexport let addClass = supportClassList ?\n  function(element, classes) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    element.classList.add.apply(element.classList, classes);\n    return element;\n  }\n  :\n  function(element, classes) {\n    var tmp = element.className;\n    classes = classes.split(/\\s+/).filter(s => s);\n    classes.forEach(c => {\n      if (!hasClass(element, c)) {\n        tmp = tmp.replace(/\\s+|$/, ' ' + classes);\n      }\n    });\n    element.className = tmp;\n    return element;\n  };\n\nexport let removeClass = supportClassList ?\n  function(element, classes) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    element.classList.remove.apply(element.classList, classes);\n    return element;\n  }\n  :\n  function(element, classes) {\n    var tmp = element.className;\n    classes = classes.split(/\\s+/).filter(s => s);\n    classes.forEach(c => {\n      if (hasClass(element, c)) {\n        tmp = tmp.replace(new RegExp(c, 'g'), '');\n      }\n    });\n    element.className = tmp;\n    return element;\n  };\n\nexport let toggleClass = supportClassList ?\n  function(element, classes, force) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    classes.forEach(c => {\n      element.classList.toggle(c, force);\n    });\n    return element;\n  }\n  :\n  function(element, classes, force) {\n    classes = classes.split(/\\s+/).filter(s => s);\n    var useForce = force !== undefined;\n    classes.forEach(c => {\n      if (hasClass(element, c) && (useForce && !force || !useForce)) {\n        removeClass(element, c);\n      } else if (!hasClass(element, c) && (useForce && force || !useForce)) {\n        addClass(element, c);\n      }\n    });\n    return element;\n  };\n","import { createTextNode } from '../dom';\n\n// virtual text node\nexport default function VText (text) {\n  this.data = text;\n}\n\nVText.prototype.render = function vdom2dom () {\n  return createTextNode(this.data);\n};\n","import { isArray } from '../utils';\nimport { addClass, removeClass, setAttr } from '../dom';\n\nexport default function klass (setValue, element, context) {\n  if (typeof setValue === 'string') {\n    setAttr(element, 'class', setValue);\n  } else if (isArray(setValue)) {\n    setAttr(element, 'class', setValue.join(' '));\n  } else {\n    for (let c in setValue) {\n      if (setValue.hasOwnProperty(c)) {\n        if (setValue[c]) {\n          addClass(element, c);\n        } else {\n          removeClass(element, c);\n        }\n      }\n    }\n  }\n}\n","export default function show (value, element, context) {\n  element.style.display = value ? '' : 'none';\n}\n","export default function style (value, element, context) {\n  for (let s in value) {\n    element.style[s] = value[s];\n  }\n}\n","import { setAttr, removeClass } from './dom';\nimport { isArray } from './utils';\n\nimport klass from './directives/class';\nimport show from './directives/show';\nimport style from './directives/style';\n\nexport function handleDirective (directive, value, element, context) {\n  switch (directive) {\n    case 'show':\n      show(value, element, context);\n      break;\n    case 'class':\n      klass(value, element, context);\n      break;\n    case 'style':\n      style(value, element, context);\n      break;\n    default:\n      setAttr(element, directive, value);\n      break;\n  }\n}\n\nfunction removeClassAttr (removeValue, element, context) {\n  if (typeof removeValue === 'string') {\n    removeClass(element, removeValue);\n  } else if (isArray(removeValue)) {\n    removeClass(element, removeValue.join(' '));\n  } else {\n    for (let c in removeValue) {\n      if (removeValue.hasOwnProperty(c)) {\n        removeClass(element, c);\n      }\n    }\n  }\n}\n\nexport function handleDirectiveRemove (directive, value, element, context) {\n  switch (directive) {\n    case 'class':\n      removeClassAttr(value, element, context);\n      break;\n  }\n}\n","import { noop } from './utils';\n\nexport function attachEvent (el, eventName, handler) {\n  if (el.addEventListener) {\n    el.addEventListener(eventName, handler, false);\n  } else if (el.attachEvent) {\n    el.attachEvent(eventName, handler);\n  } else {\n    el[`on${eventName}`] = handler;\n  }\n}\n\nexport function detachEvent (el, eventName, handler) {\n  if (el.removeEventListener) {\n    el.removeEventListener(eventName, handler, false);\n  } else if (el.detachEvent) {\n    el.detachEvent(eventName, handler);\n  } else {\n    el[`on${eventName}`] = noop;\n  }\n}\n","import { createElement, setAttr, appendChild } from '../dom';\nimport VText from './vtext';\nimport { isVNode, isVText } from './utils';\nimport { isArray, isFunction } from '../utils';\nimport { handleDirective } from '../directive';\nimport { attachEvent } from '../event';\n\nexport default function VNode (tagName, props, children, key) {\n  this.tagName = tagName;\n  this.props = props || {};\n  this.key = key ? String(key) : undefined; // key 用来标识节点，方便 diff\n  let childNodes = [];\n  children = children || [];\n  for (let i = 0; i < children.length; ++i) {\n    const child = children[i];\n    if (isVNode(child) || isVText(child) || child._isComponent) {\n      childNodes.push(child);\n    } else if (typeof child === 'string' || typeof child === 'number') {\n      childNodes.push(new VText(child));\n    } else if (isArray(child)) {\n      childNodes = childNodes.concat(child);\n    } else {\n      // ignore\n    }\n  }\n  this.children = childNodes;\n  let count = this.children.length;\n  for (let i = 0; i < this.children.length; ++i) {\n    count += this.children[i].count || 0;\n  }\n  this.count = count; // 记录子节点数，方便 patch 的时候找到节点位置\n}\n\n// 检查是否指令属性\nfunction checkAttrDirective (attr) {\n  return /^@|n-|:/.test(attr);\n}\n\n// add event listener\nfunction isEventDirective (attr) {\n  return /^@/.test(attr);\n}\n\nVNode.prototype.render = function vdom2dom(context) {\n  const el = createElement(this.tagName);\n  const props = this.props;\n  for (let p in props) {\n    if (checkAttrDirective(p)) {\n      // 处理指令\n      if (/^n-/.test(p)) {\n        handleDirective(p.slice(2), props[p], el, context);\n      } else if (/^:/.test(p)) {\n        handleDirective(p.slice(1), props[p], el, context);\n      } else {\n        const eventName = p.slice(1);\n        const handlerFunc = isFunction(props[p]) ? props[p] : context[props[p]];\n        attachEvent(el, eventName, function handler(evt) {\n          handlerFunc.call(context, evt);\n        });\n      }\n    } else {\n      setAttr(el, p, props[p]);\n    }\n  }\n  for (let i = 0; i < this.children.length; ++i) {\n    appendChild(this.children[i].render(context), el);\n  }\n  return el;\n};\n","import VText from './vtext';\nimport VNode from './vnode';\n\nexport function isVNode (node) {\n  return node instanceof VNode;\n}\n\nexport function isVText (node) {\n  return node instanceof VText;\n}\n","// 分别找到有 key 的元素位置和没有 key 的元素的位置\nfunction keyIndex (list) {\n  const keys = {}; // 有 key 的节点位置\n  const free = []; // 可替换的位置（没有 key 的节点都被标识为可替换的节点）\n  for (let i = 0; i < list.length; i++) {\n    const item = list[i]\n    const itemKey = item.key;\n    if (typeof itemKey !== 'undefined') {\n      keys[itemKey] = i;\n    } else {\n      free.push(i);\n    }\n  }\n  return {\n    keys: keys,\n    free: free\n  };\n}\n\n// 模拟删除\nfunction remove(arr, index, key) {\n  arr.splice(index, 1);\n  return {\n    from: index,\n    key: key\n  };\n}\n\nexport default function reorder(pList, nList) {\n  // N: pList.length\n  // M: nList.length\n  // O(M) time, O(M) memory\n  const nListIndex = keyIndex(nList);\n  const nKeys = nListIndex.keys;\n  const nFree = nListIndex.free;\n\n  if (nFree.length === nList.length) { // 如果 nList 全部节点都没有 key 就不需要 reorder 把 nList 直接作为 reorder 之后的列表返回\n    return {\n      list: nList,\n      moves: null\n    };\n  }\n\n  // O(N) time, O(N) memory\n  const pListIndex = keyIndex(pList)\n  const pKeys = pListIndex.keys;\n  const pFree = pListIndex.free;\n\n  if (pFree.length === pList.length) { // 如果 pList 全部节点都没有 key 就不需要 reorder 把 nList 直接作为 reorder 之后的列表返回\n    return {\n      list: nList,\n      moves: null\n    };\n  }\n\n  // O(MAX(N, M)) memory\n  const rList = [];\n\n  let freeIndex = 0; // 表示没有 key 的节点已使用的个数\n  let freeCount = nFree.length; // 表示 nList 中没有 key 的节点的总个数\n  let deletedItems = 0; // 被删除的节点的个数\n\n  // O(N) time\n  // 遍历 pList 将 pList 有 key 的节点映射到 nList 的节点，如果没有映射，就用 null 表示节点将被删除。pList 空闲节点用 nList 的空闲节点按顺序占位\n  for (let i = 0 ; i < pList.length; i++) {\n    const pItem = pList[i];\n\n    if (typeof pItem.key !== 'undefined') { // key 节点\n      if (nKeys.hasOwnProperty(pItem.key)) { // 有映射\n        const itemIndex = nKeys[pItem.key];\n        rList.push(nList[itemIndex]);\n      } else { // 没有映射\n        deletedItems++;\n        rList.push(null);\n      }\n    } else { // 空闲节点\n      if (freeIndex < freeCount) { // nList 的空闲节点还没用完，继续用\n        const itemIndex = nFree[freeIndex++];\n        rList.push(nList[itemIndex]);\n      } else { // nList 的空闲节点用完了，这个 pList 的空闲节点没有节点与其对应，应该被删除\n        deletedItems++;\n        rList.push(null);\n      }\n    }\n  }\n\n  const lastFreeIndex = freeIndex >= nFree.length ? // nList 中下一个空闲节点的位置\n      nList.length : // nList 中空闲节点已经用完了\n      nFree[freeIndex]; // 未用完\n\n  // O(M) time\n  // 遍历 nList 将新增节点／剩余空闲节点追加到 rList 末尾\n  for (let j = 0; j < nList.length; j++) {\n    const nItem = nList[j];\n    if (nItem.key) {\n      if (!pKeys.hasOwnProperty(nItem.key)) {\n        rList.push(nItem);\n      }\n    } else if (j >= lastFreeIndex) {\n      rList.push(nItem);\n    }\n  }\n\n  const simulateList = rList.slice(0); // 复制一份，模拟 rList -> nList 重排操作\n  let simulateIndex = 0;\n  const removes = []; // 被移除的节点\n  const inserts = []; // 被插入的节点\n  let simulateItem;\n\n  for (let k = 0; k < nList.length;) {\n    const wantedItem = nList[k]; // 目标节点\n    simulateItem = simulateList[simulateIndex]; // 模拟节点\n\n    // 先模拟删除\n    while (simulateItem === null && simulateList.length) {\n      removes.push(remove(simulateList, simulateIndex, null)); // 删除不需要记录 key 的节点\n      simulateItem = simulateList[simulateIndex];\n    }\n\n    if (!simulateItem || simulateItem.key !== wantedItem.key) {\n      // 如果当前位置有 key\n      if (wantedItem.key) {\n        // 如果当前节点的位置不对，要进行移动\n        if (simulateItem && simulateItem.key) {\n          if (nKeys[simulateItem.key] !== k + 1) {\n            removes.push(remove(simulateList, simulateIndex, simulateItem.key)); // 先移除当前位置的节点\n            simulateItem = simulateList[simulateIndex]; // 删除后，该位置对应的是下一个节点\n            // 然后在当前位置插入目标节点\n            if (!simulateItem || simulateItem.key !== wantedItem.key) { // 如果删除之后还不对应，就插入目标节点\n              inserts.push({key: wantedItem.key, to: k});\n            } else { // 删除后正好对应就不需要插入了\n              simulateIndex++; // 检查下一个\n            }\n          }\n          else { // nKeys[simulateItem.key] === k + 1 如果下一个目标节点和当前模拟节点对应\n            inserts.push({key: wantedItem.key, to: k});\n          }\n        }\n        else { // 位置不对，插入\n          inserts.push({key: wantedItem.key, to: k});\n        }\n        k++;\n      }\n      // 目标节点没有 key 但是 模拟节点有 key\n      else if (simulateItem && simulateItem.key) {\n        // 位置不对，删除\n        removes.push(remove(simulateList, simulateIndex, simulateItem.key))\n      }\n    }\n    else {\n      simulateIndex++;\n      k++;\n    }\n  }\n\n  // 删除所有剩余节点\n  while(simulateIndex < simulateList.length) {\n    simulateItem = simulateList[simulateIndex];\n    removes.push(remove(simulateList, simulateIndex, simulateItem && simulateItem.key));\n  }\n\n  // 这种情况不需要移位，只需要删除多余的节点：没有 key 对应的节点、多余的空闲节点\n  if (removes.length === deletedItems && !inserts.length) {\n    return {\n      list: rList,\n      moves: null\n    };\n  }\n\n  return {\n    list: rList,\n    moves: {\n      removes: removes,\n      inserts: inserts\n    }\n  };\n}\n\n// reorder:\n// [f1, A, B, C, D, f2] => [f3, C, B, A, f4, E, f5]\n// rList: [f3, A, B, C, null, f4]\n// rList: [f3, A, B, C, null, f4, E, f5]\n// deletedItems: 1\n// simulateList: [f3, A, B, C, null, f4, E, f5]\n// nList:        [f3, C, B, A, f4,   E,  f5   ]\n// si:0, k:0, nItem:f3, sItem:f3\n// s1:1, k:1, nItem:C, sItem:A\n// remove(1, A) => simulateList:[f3, B, C, null, f4, E, f5], sItem:B\n// insert(1, C) k++\n// si:1, k:2, nItem:B, sItem:B\n// si:2, k:3, nItem:A, sItem:C\n// remove(2, C) => simulateList:[f3, B, null, f4, E, f5], sItem:null\n// insert(3, A) k++\n// si:2, k:4, nItem:f4, sItem:null\n// remove(2, null) => simulateList:[f3, B, f4, E, f5], sItem:f4\n// si:2, k:4, nItem:f4, sItem:f4 => si++, k++\n// si:3, k:5, nItem:E, sItem:E => si++, k++\n// si:4, k:6, nItem:f5, sItem:f5 => si++, k++\n// si:5, k:7\n// moves:{removes: [(1, A), (2, C), (2, null)], inserts: [(1, C), (3, A)]}\n\n// diffChildren:\n// pList: [f1, A1, B1, C1, D,    f2       ]\n// rList: [f3, A2, B2, C2, null, f4, E, f5]\n// diff(f1, f3)\n// diff(A1, A2)\n// diff(B1, B2)\n// diff(C1, C2)\n// diff(D, null) => remove(D)\n// diff(f2, f4)\n// insert(null, E)\n// insert(null, f5)\n// {order: moves}\n\n// patch:\n// [f1, A1, B1, C1, D, f2]\n// 目标: [f3, C2, B2, A2, f4, E, f5]\n// insert(null, E) => [f1, A1, B1, C1, D, f2, E]\n// insert(null, f5) => [f1, A1, B1, C1, D, f2, E, f5]\n// patch order:\n// remove(1, A) => [f1, B1, C1, D, f2, E, f5], map:{A: A1}\n// remove(2, C) => [f1, B1, D, f2, E, f5], map:{A: A1, C: C1}\n// remove(2, null) => [f1, B1, f2, E, f5]\n// insert(1, C) => [f1, C1, B1, f2, E, f5]\n// insert(3, A) => [f1, C1, B1, A1, f2, E, f5]\n// patch 子节点\n// patch(f1, f3)\n// patch(A1, A2)\n// patch(B1, B2)\n// patch(C1, C2)\n// remove D 已删除，不会重复删除\n// patch(f2, f4)\n","// 映射 dom 树与 virtual-dom 树，找到对应索引的 dom 节点并保存索引映射\nexport function domIndex (domTree, vdomTree, indices) {\n  if (indices.length === 0) {\n    return {};\n  } else {\n    const mapping = {};\n    recurse(domTree, vdomTree, indices, mapping, 0);\n    return mapping;\n  }\n}\n\nfunction recurse (rootNode, vdomTree, indices, mapping, rootIndex) {\n  if (rootNode) {\n    if (indexInRange(indices, rootIndex, rootIndex)) {\n      mapping[rootIndex] = rootNode;\n    }\n    if (vdomTree.children) { // 只有 VNode 要查找 VText 不需要\n      let currentIndex = rootIndex;\n      const childNodes = rootNode.childNodes;\n      for (let i = 0; i < vdomTree.children.length; ++i) {\n        const vChild = vdomTree.children[i] || {};\n        currentIndex += 1;\n        const nextIndex = currentIndex + (vChild.count || 0);\n        if (indexInRange(indices, currentIndex, nextIndex)) {\n          recurse(childNodes[i], vChild, indices, mapping, currentIndex);\n        }\n        currentIndex = nextIndex;\n      }\n    }\n  }\n}\n\n// 查找 indices 数组（已排序），判断是否存在 [min, max] 区间内的元素\nfunction indexInRange (indices, min, max) {\n  if (indices.length === 0 || min > max) {\n    return false;\n  }\n  let result = false;\n  let head = 0, tail = indices.length - 1;\n  let current, currentIndex;\n  while (head <= tail) {\n    currentIndex = ((head + tail) / 2) >> 0; // 移位操作为了快速向下取整\n    current = indices[currentIndex];\n    if (head === tail) {\n      result = current >= min && current <= max;\n      break;\n    } else if (current < min) {\n      head = currentIndex + 1;\n    } else if (current > max) {\n      tail = currentIndex - 1;\n    } else { // min <= current <= max\n      result = true;\n      break;\n    }\n  }\n  return result;\n}\n","import { setAttr, replaceNode, removeNode, removeAttr } from '../dom';\nimport { handleDirective, handleDirectiveRemove } from '../directive';\nimport { attachEvent, detachEvent } from '../event';\nimport { domIndex } from './dom-index';\n\nexport const PATCH = {\n  REPLACE: 0, // 替换节点\n  INSERT: 1, // 插入\n  REMOVE: 2, // 移除\n  REORDER: 3, // 重排\n  PROPS: 4, // 修改属性\n  TEXT: 5 // 替换文本\n};\n\nfunction ascending(a, b) {\n  return a > b ? 1 : -1;\n}\n\n// 根据补丁更新 DOM 节点\nfunction applyPatches (context, domNode, patches) {\n  for (let i = 0; i < patches.length; ++i) {\n    const patch = patches[i];\n    switch (patch.type) {\n      case PATCH.REPLACE: // 替换元素节点\n        replaceNode(patch.node.render(context), domNode);\n        break;\n      case PATCH.PROPS: // 属性修改\n        patchProps(domNode, patch, context);\n        break;\n      case PATCH.TEXT: // 替换文本内容\n        domNode.data = patch.data;\n        break;\n      case PATCH.REORDER: // 子节点重新排序\n        patchReorder(context, domNode, patch.moves);\n        break;\n      case PATCH.INSERT: // append\n        if (domNode) {\n          domNode.appendChild(patch.node.render(context));\n        }\n        break;\n      case PATCH.REMOVE:\n        removeNode(domNode);\n        break;\n      default:\n        // warn\n    }\n  }\n}\n\nexport function patch (context, domNode, patch) {\n  const patches = patch.patches;\n  // 先找需要 patch 的 dom 节点\n  const indices = [];\n  for (let p in patches) {\n    if (patches.hasOwnProperty(p)) {\n      indices.push(+p); // 一定要转成数字\n    }\n  }\n  indices.sort(ascending);\n  let pVdom = patch.pVdom;\n  if (domNode._isFragment) {\n    pVdom = { children: patch.pVdom };\n  }\n  const domMapping = domIndex(domNode, pVdom, indices);\n  for (let i = 0; i < indices.length; ++i) {\n    const idx = indices[i];\n    applyPatches(context, domMapping[idx], patches[idx]);\n  }\n}\n\nfunction patchReorder (context, domNode, moves) {\n  const removes = moves.removes;\n  const inserts = moves.inserts;\n  const childNodes = domNode.childNodes;\n  const keyMap = {};\n  // 先删除\n  for (let i = 0; i < removes.length; ++i) {\n    const remove = removes[i];\n    const toRemove = childNodes[remove.from];\n    if (remove.key) { // 需要保留，等待重新插入\n      keyMap[remove.key] = toRemove;\n    }\n    removeNode(toRemove);\n  }\n  // 后插入\n  for (let i = 0; i < inserts.length; ++i) {\n    const insert = inserts[i];\n    const target = insert.to < childNodes.length ? childNodes[insert.to] : null;\n    const toInsert = keyMap[insert.key];\n    domNode.insertBefore(toInsert, target);\n  }\n}\n\n// 检查是否指令属性\nfunction isAttrDirective (attr) {\n  return /^@|n-|:/.test(attr);\n}\n// 检查是否事件指令\nfunction isEventDirective (attr) {\n  return /^@/.test(attr);\n}\n\nfunction patchProps (domNode, patch, context) {\n  const setProps = patch.props.set;\n  const removeProps = patch.props.remove;\n  for (let p in setProps) {\n    if (setProps.hasOwnProperty(p)) {\n      // 检查是否指令属性\n      if (isAttrDirective(p)) {\n        // 处理指令\n        if (/^n-/.test(p)) {\n          handleDirective(p.slice(2), setProps[p], domNode, context);\n        } else if (/^:/.test(p)) {\n          handleDirective(p.slice(1), setProps[p], domNode, context);\n        } else {\n          // 事件指令\n          // remove old event listener\n          // detachEvent(domNode, p.slice(1), patch.props[p]);\n          // add new event listener\n        }\n      } else { // 普通属性\n        if (typeof patch.props[p] === 'undefined') {\n          removeAttr(domNode, p);\n        } else {\n          setAttr(domNode, p, patch.props[p]);\n        }\n      }\n    }\n  }\n  // @TODO remove 错误\n  for (let p in removeProps) {\n    if (removeProps.hasOwnProperty(p)) {\n      if (isAttrDirective(p)) {\n        if (/^n-/.test(p)) {\n        } else if (/^:/.test(p)) {\n          handleDirectiveRemove(p.slice(1), removeProps[p], domNode, context);\n        } else {\n        }\n      }\n    }\n  }\n}\n","import { isVNode, isVText } from './utils';\nimport { isArray, isPlainObject } from '../utils';\nimport listDiff from './list-diff';\nimport { PATCH } from './patch';\n\n// 快速比较两个对象是否“相等”\nfunction objectEquals (a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n\nfunction diffProps (oldTree, newTree) {\n  let oldTreeProps = oldTree.props;\n  let newTreeProps = newTree.props;\n  let setPropsPatches = {}, removePropsPatches = {}, hasPatch = false;\n  for (let p in oldTreeProps) {\n    if (!newTreeProps.hasOwnProperty(p) || typeof newTreeProps[p] === 'undefined') { // 属性被移除\n      hasPatch = true;\n      removePropsPatches[p] = oldTreeProps[p];\n    } else if (isPlainObject(newTreeProps[p])) {\n      if (!objectEquals(newTreeProps[p], oldTreeProps[p])) {\n        hasPatch = true;\n        setPropsPatches[p] = newTreeProps[p];\n      }\n    } else if (newTreeProps[p] !== oldTreeProps[p]) {\n      hasPatch = true;\n      setPropsPatches[p] = newTreeProps[p];\n    }\n  }\n  // 检查新属性\n  for (let p in newTree) {\n    if (newTree.hasOwnProperty(p) && !oldTree.hasOwnProperty(p)) {\n      hasPatch = true;\n      setPropsPatches[p] = newTreeProps[p];\n    }\n  }\n  if (!hasPatch) {\n    return null;\n  }\n  return {\n    set: setPropsPatches,\n    remove: removePropsPatches\n  };\n}\n\n// 按照先删除后插入的顺序\nfunction diffChildren (pChildren, nChildren, parentIndex, patches, parentPatches) {\n  const diffs = listDiff(pChildren, nChildren);\n  const orderedList = diffs.list;\n\n  const pLen = pChildren.length;\n  const oLen = orderedList.length;\n  const len = pLen > oLen ? pLen : oLen; // const len = max(pLen, oLen);\n\n  let currentIndex = parentIndex;\n  for (let i = 0; i < len; ++i) {\n    const pNode = pChildren[i];\n    const nNode = orderedList[i];\n    currentIndex = currentIndex + 1;\n    if (!pNode) {\n      if (nNode) { // 旧的没有新的有，插入（末尾）\n        parentPatches.push({\n          type: PATCH.INSERT,\n          node: nNode\n        });\n      }\n    } else {\n      diffWalk(pNode, nNode, currentIndex, patches);\n    }\n    if (pNode && pNode.count) {\n      currentIndex += pNode.count;\n    }\n  }\n  if (diffs.moves) {\n    parentPatches.push({\n      type: PATCH.REORDER,\n      moves: diffs.moves\n    });\n  }\n}\n\nfunction diffWalk (pVdom, nVdom, currentIndex, patches) {\n  let currentPatches = []; // 当前层级的 patch\n  if (nVdom === null) { // * VS null\n    currentPatches.push({\n      type: PATCH.REMOVE,\n      from: currentIndex,\n      key: null\n    });\n  } else if (isVNode(pVdom) && isVNode(nVdom)) { // VNode VS VNode\n    if (pVdom.tagName !== nVdom.tagName || pVdom.key !== nVdom.key) { // 不同 tagName/key 节点: 替换\n      currentPatches.push({\n        type: PATCH.REPLACE,\n        node: nVdom\n      });\n    } else { // 同 key 同 tagName 节点: 比较属性和子节点\n      const propsPatches = diffProps(pVdom, nVdom);\n      if (propsPatches) {\n        currentPatches.push({\n          type: PATCH.PROPS,\n          props: propsPatches\n        });\n      }\n      // 继续 diff 子节点\n      diffChildren(pVdom.children, nVdom.children, currentIndex, patches, currentPatches);\n    }\n  } else if (isVText(pVdom) && isVText(nVdom)) { // VText VS VText\n    if (pVdom.data !== nVdom.data) { // 内容不一样的时候才替换（只替换内容即可）\n      currentPatches.push({type: PATCH.TEXT, data: nVdom.data});\n    }\n  } else if (pVdom._isComponent || nVdom._isComponent) { // * VS Component | Component VS *\n  } else { // 不同类型的节点\n    currentPatches.push({\n      type: PATCH.REPLACE,\n      node: nVdom\n    });\n  }\n  if (currentPatches.length > 0) {\n    patches[currentIndex] = currentPatches;\n  }\n}\n\nexport function diff (pVdom, nVdom) {\n  let patch = {};\n  patch.pVdom = pVdom;\n  const patches = {};\n  if (isArray(pVdom)) {\n    const currentPatches = [];\n    diffChildren(pVdom, nVdom, 0, patches, currentPatches);\n    if (currentPatches.length > 0) {\n      patches[0] = currentPatches;\n    }\n  } else {\n    diffWalk(pVdom, nVdom, 0, patches);\n  }\n  patch.patches = patches;\n  return patch;\n}\n","import VNode from './vnode';\nimport VText from './vtext';\nimport { isArray, isPlainObject } from '../utils';\nimport { isVNode, isVText } from './utils';\n\nimport Naive from '../main';\n\nexport default function h (tagName, props, children, key) {\n  const context = this || {};\n  const components = context['components'] || {};\n  if (isVNode(tagName) || isVText(tagName)) {\n    return tagName;\n  } else if (isPlainObject(tagName)) {\n    if (components.hasOwnProperty(tagName.tagName)) {\n      console.log(tagName.tagName);\n    }\n    return new VNode(tagName.tagName, tagName.attrs, tagName.children, tagName.key);\n  } else if (isArray(tagName)) {\n    const list = [];\n    for (let i = 0; i < tagName.length; ++i) {\n      list.push(h(tagName[i]));\n    }\n    return list;\n  } else if(arguments.length < 2) {\n    return new VText(tagName);\n  } else {\n    if (components.hasOwnProperty(tagName)) {\n      return components[tagName]();\n    } else {\n      return new VNode(tagName, props, children, key);\n    }\n  }\n}\n","import { isArray } from '../utils';\n\nexport function addHook (hookName, callback) {\n  let callbacks = this._hooks[hookName];\n  if (!callbacks) {\n    callbacks = [];\n  }\n  if (isArray(callback)) {\n    callbacks = callbacks.concat(callback);\n  } else {\n    callbacks.push(callback);\n  }\n  this._hooks[hookName] = callbacks;\n}\n\nexport function removeHook (hookName, callback) {\n  const callbacks = this._hooks[hookName];\n  if (!callbacks || callbacks.length === 0) {\n    return this;\n  }\n  if (!callback) {\n    callbacks.splice(0, callbacks.length);\n  } else {\n    for (let i = 0; i < callbacks.length; ++i) {\n      if (callbacks[i] === callback) {\n        callbacks.splice(i, 1);\n        break;\n      }\n    }\n  }\n  return this;\n}\n\nexport function callHooks (hookName) {\n  const _callbacks = this._hooks[hookName] || [];\n  for (let i = 0; i < _callbacks.length; ++i) {\n    _callbacks[i].call(this);\n  }\n}\n","export function NaiveException (message) {\n  this.name = 'NaiveException';\n  this.message = message;\n}\n","import { getElement, createDocumentFragment, appendChild, replaceNode } from './dom';\nimport { diff, patch } from './vdom/vdom';\nimport h from './vdom/h';\nimport { warn, extend, isFunction, isPlainObject } from './utils';\nimport { addHook, removeHook, callHooks } from './api/hooks';\nimport { NaiveException } from './exception';\n\nfunction emptyRender () {\n  return null;\n}\n\nexport default function Naive (options) {\n  options = options || {};\n  this.name = options.name || '';\n  this._hooks = {};\n  this._isComponent = true;\n  if ('state' in options) {\n    if (!isFunction(options.state)) {\n      // 必须是 function\n      throw new NaiveException('state 必须是 [Function]');\n    }\n    const _state = options.state();\n    if (isPlainObject(_state)) {\n      this.state = _state;\n    } else {\n      warn('state 必须返回 [Plain Object]');\n      this.state = {};\n    }\n  } else {\n    this.state = {};\n  }\n  const context = this;\n  const _vdomRender = options.render || emptyRender;\n  const _templateHelpers = {\n    \"if\": function (condition, options) {\n      return condition ? h(options) : condition;\n    },\n    \"each\": function (list, createItem) {\n      const nodes = [];\n      for (let i = 0; i < list.length; ++i) {\n        const item = list[i];\n        const key = isPlainObject(item) && 'id' in item ? item['id'] : i;\n        nodes.push(h(createItem.call(context, item, i, key)));\n      }\n      return nodes;\n    }\n  };\n  this.vdomRender = function vdomRender () {\n    const vdom = _vdomRender.call(\n      this,\n      function createVdom () {\n        return h.apply(context, Array.prototype.slice.call(arguments, 0));\n      },\n      _templateHelpers\n    );\n    let count = 0;\n    if (vdom.length) {\n      for (let i = 0; i < vdom.length; ++i) {\n        count += 1;\n        if (vdom[i].count) {\n          count += vdom[i].count;\n        }\n      }\n    } else {\n      count = vdom.count || 1;\n    }\n    this.count = count;\n    return vdom;\n  };\n  this.ele = null;\n  // components\n  this.components = {};\n  const componentsOptions = options.components || {};\n  for (let p in componentsOptions) {\n    if (componentsOptions.hasOwnProperty(p)) {\n      const componentDefine = componentsOptions[p] || {};\n      componentDefine.name = componentDefine.name || p;\n      context.components[p] = createComponentCreator(this, componentDefine);\n    }\n  }\n  this._init(options);\n}\n\nfunction createComponentCreator (context, componentDefine) {\n  return function createComponent() {\n    return new Naive(componentDefine);\n  };\n}\n\nconst prtt = Naive.prototype;\n\nprtt.render = function render () {\n  const vdom = this.vdom;\n  if (vdom.length) { // fragment\n    const docFragment = createDocumentFragment();\n    const simFragment = { _isFragment: true, childNodes: [] };\n    for (let i = 0; i < vdom.length; ++i) {\n      const node = vdom[i].render(this);\n      simFragment.childNodes.push(node);\n      appendChild(node, docFragment);\n    }\n    this.ele = simFragment;\n    return docFragment;\n  } else {\n    this.ele = vdom.render(this);\n    return this.ele;\n  }\n};\n\nprtt.setState = function setState (state) {\n  extend(this.state, state);\n  this.update(); // @TODO nextTick 的时候再 update\n  return this;\n};\n\n// 更新视图\nprtt.update = function update () {\n  if (!this.mounted) { // 如果组件没有挂载到元素上，不需要更新视图\n    return this;\n  }\n  const preVdom = this.vdom;\n  this.vdom = this.vdomRender();\n  // console.log(preVdom, this.vdom);\n  const patches = diff(preVdom, this.vdom);\n  // console.log(patches);\n  if (patches) {\n    patch(this, this.ele, patches);\n  } else {\n    warn('不需要更新视图');\n  }\n};\n\nprtt._init = function _init (options) {\n  const methods = options.methods || {};\n  // 将 methods 移到 this\n  for (let m in methods) {\n    if (methods.hasOwnProperty(m)) {\n      if (this.hasOwnProperty(m)) {\n        warn(`属性 \"${m}\" 已存在`);\n      } else {\n        this[m] = methods[m];\n      }\n    }\n  }\n  const hooks = options.hooks || {};\n  for (let p in hooks) {\n    if (hooks.hasOwnProperty(p)) {\n      this._addHook(p, hooks[p]);\n    }\n  }\n  this.vdom = this.vdomRender();\n};\n\nprtt.mount = function mount (selector) {\n  const mountPoint = typeof selector === 'string' ? getElement(selector) : selector;\n  if (!mountPoint) {\n    throw new NaiveException('找不到挂载节点');\n  }\n  replaceNode(this.render(), mountPoint);\n  this.mounted = true;\n  this._callHooks('mounted');\n};\n\nprtt._callHooks = callHooks;\n\nprtt._addHook = addHook;\n\nprtt._removeHook = removeHook;\n\n// 销毁组件\nprtt.destroy = function destroy () {\n  // 销毁事件监听\n  // 调用 destroy 勾子\n  this._callHooks('destroy');\n  // 销毁勾子回调\n  for (let p in this._hooks) {\n    if (this._hooks.hasOwnProperty(p)) {\n      this._removeHook(p);\n    }\n  }\n};\n"],"names":["warn","message","window","console","isArray","Array","obj","Object","prototype","toString","call","isUndefined","extend","props","i","isFunction","isPlainObject","getElement","selector","query","createElement","tag","document","createTextNode","text","createDocumentFragment","context","querySelector","removeNode","node","parentNode","removeChild","replaceNode","newNode","replaceChild","appendChild","el","target","setAttr","attr","value","setAttribute","removeAttr","name","removeAttribute","supportClassList","classList","hasClass","element","classes","split","filter","s","contains","length","tmp","className","indexOf","addClass","add","apply","forEach","c","replace","removeClass","remove","RegExp","VText","data","render","vdom2dom","klass","setValue","join","hasOwnProperty","show","style","display","handleDirective","directive","removeClassAttr","removeValue","handleDirectiveRemove","attachEvent","eventName","handler","addEventListener","VNode","tagName","children","key","String","undefined","childNodes","child","isVNode","isVText","_isComponent","push","concat","count","checkAttrDirective","test","p","slice","handlerFunc","evt","keyIndex","list","keys","free","item","itemKey","arr","index","splice","reorder","pList","nList","nListIndex","nKeys","nFree","pListIndex","pKeys","pFree","rList","freeIndex","freeCount","deletedItems","pItem","itemIndex","lastFreeIndex","j","nItem","simulateList","simulateIndex","removes","inserts","simulateItem","k","wantedItem","to","domIndex","domTree","vdomTree","indices","mapping","recurse","rootNode","rootIndex","indexInRange","currentIndex","vChild","nextIndex","min","max","result","head","tail","current","PATCH","ascending","a","b","applyPatches","domNode","patches","patch","type","REPLACE","PROPS","TEXT","REORDER","moves","INSERT","REMOVE","sort","pVdom","_isFragment","domMapping","idx","patchReorder","keyMap","toRemove","from","insert","toInsert","insertBefore","isAttrDirective","patchProps","setProps","set","removeProps","objectEquals","JSON","stringify","diffProps","oldTree","newTree","oldTreeProps","newTreeProps","setPropsPatches","removePropsPatches","hasPatch","diffChildren","pChildren","nChildren","parentIndex","parentPatches","diffs","listDiff","orderedList","pLen","oLen","len","pNode","nNode","diffWalk","nVdom","currentPatches","propsPatches","diff","h","components","log","attrs","arguments","addHook","hookName","callback","callbacks","_hooks","removeHook","callHooks","_callbacks","NaiveException","emptyRender","Naive","options","state","_state","_vdomRender","_templateHelpers","condition","createItem","nodes","vdomRender","vdom","createVdom","ele","componentsOptions","componentDefine","createComponentCreator","_init","createComponent","prtt","docFragment","simFragment","setState","update","mounted","preVdom","methods","m","hooks","_addHook","mount","mountPoint","_callHooks","_removeHook","destroy"],"mappings":"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"}